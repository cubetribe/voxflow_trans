version: '3.8'

# Lokale Entwicklung ohne Redis Container - nutzt lokales Redis oder In-Memory Fallback
services:
  # Python Voxtral Service - Direkt auf macOS
  python-service:
    build: ./backend/python-service
    ports:
      - "8000:8000"
    environment:
      - PORT=8000
      - MODEL_NAME=mistralai/Voxtral-Mini-3B-2507
      - DEVICE=mps
      - MAX_AUDIO_LENGTH=1800
      - CHUNK_SIZE=30
      - REDIS_URL=redis://host.docker.internal:6379  # Lokales Redis
      - REDIS_OPTIONAL=true  # Fallback zu In-Memory wenn Redis nicht verfügbar
      - ENVIRONMENT=development
      - LOG_LEVEL=debug
      - PYTHONUNBUFFERED=1
    volumes:
      - ./backend/python-service:/app
      - python_cache:/root/.cache
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Node.js API Gateway - Direkt auf macOS
  node-service:
    build: ./backend/node-service
    ports:
      - "3000:3000"
    environment:
      - PORT=3000
      - REDIS_URL=redis://host.docker.internal:6379  # Lokales Redis
      - REDIS_OPTIONAL=true  # Fallback zu In-Memory wenn Redis nicht verfügbar
      - DATABASE_URL=sqlite:./data/voxflow.db
      - PYTHON_SERVICE_URL=http://python-service:8000
      - JWT_SECRET=dev-secret-key-change-in-production
      - NODE_ENV=development
      - LOG_LEVEL=debug
    depends_on:
      python-service:
        condition: service_healthy
    volumes:
      - ./backend/node-service:/app
      - node_data:/app/data
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend React App
  frontend:
    build: ./frontend
    ports:
      - "5173:5173"
    environment:
      - VITE_API_URL=http://localhost:3000
      - VITE_WS_URL=ws://localhost:3000
      - VITE_MAX_FILE_SIZE=500
      - VITE_DEBUG_MODE=true
    depends_on:
      node-service:
        condition: service_healthy
    volumes:
      - ./frontend:/app
      - /app/node_modules
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5173"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  python_cache:
  node_data: